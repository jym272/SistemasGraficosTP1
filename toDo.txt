// Hacer
-> Planeta tierra
-> planeta tierra, que el planeta gire, el centro del universo es la capsula espacial
   se da la ilusion que la ISS es la que avanza

//-> Recordar, las u,v de texturas en las superficies de barrido-revolucion salen gratis
 cada posicion del recorrido pueden corresponder a u =[0,1]
 cada posicion de la forma pueden corresponder a v =[0,1]


controles de la capsula, adaptarlos a el nuevo skybox
        -> son muy responsivos, bajarle, simular el movimiento de la capsula lentamente
        -> la capsulo no puede salir de los confines del skybox
        -> el zoom no puede ser mayor a la distancia del skybox
        -> cambiar las tangentes de los barriles


ideas ->
    -> se pueden mover las nubes,
    -> rotacion de la tierra, luna,
    -> reemplazar las funciones de maximo en el indice, reemplazarlos porr index[index.length-1]
    -> crear controles para controlar la direccion de spotlights
            -> depende del modulo de la direccion de la luz, si es mas grande que la normal, testearlo
            -> colocar una esfera en el escenario
   -> darle mas triangulos al anillo amarillo

camara -> el update solo sirve cuando se mueve la camara, sino, no revisar



// Opcional
-> Corregir los giros, el menor camino para rotar la camara, Ej: de atras hacia la derecha.



modelViewMatrix-->worldMatrix ---> u_world
worldInverseMatrix = m4.inverse(worldMatrix);
normalMatrix    --->  worldInverseTransposeMatrix

u_worldViewProjection -->m4.multiply(viewProjectionMatrix, worldMatrix);

gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
gl_Position = u_worldViewProjection * a_position;
